version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - mynetwork

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    networks:
      - mynetwork

  producer:
    build:
      context: .
      dockerfile: DockerfileProducer
    depends_on:
      - kafka
    env_file:
      - .env
    networks:
      - mynetwork

  consumer:
    build:
      context: .
      dockerfile: DockerfileConsumer
    depends_on:
      - kafka
      - flask-server
    env_file:
      - .env
    networks:
      - mynetwork

  flask-server:
    build:
      context: .
      dockerfile: DockerfileFlask
    ports:
      - "5000:5000"
    depends_on:
      - kafka
    env_file:
      - .env
    volumes:
      - ./stock_prediction_model.pkl:/app/stock_prediction_model.pkl  
    networks:
      - mynetwork

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: Stockhist
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: zerouk1234
    ports:
      - "54321:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: yassinebarka59@gmail.com
      PGADMIN_DEFAULT_PASSWORD: hakimhakim
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - mynetwork

volumes:
  pgadmin_data:
    driver: local

networks:
  mynetwork:
